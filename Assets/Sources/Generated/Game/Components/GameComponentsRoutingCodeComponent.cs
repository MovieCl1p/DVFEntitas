//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.RoutingCodeComponent componentsRoutingCode { get { return (Components.RoutingCodeComponent)GetComponent(GameComponentsLookup.ComponentsRoutingCode); } }
    public bool hasComponentsRoutingCode { get { return HasComponent(GameComponentsLookup.ComponentsRoutingCode); } }

    public void AddComponentsRoutingCode(string newRoutingCode) {
        var index = GameComponentsLookup.ComponentsRoutingCode;
        var component = (Components.RoutingCodeComponent)CreateComponent(index, typeof(Components.RoutingCodeComponent));
        component.RoutingCode = newRoutingCode;
        AddComponent(index, component);
    }

    public void ReplaceComponentsRoutingCode(string newRoutingCode) {
        var index = GameComponentsLookup.ComponentsRoutingCode;
        var component = (Components.RoutingCodeComponent)CreateComponent(index, typeof(Components.RoutingCodeComponent));
        component.RoutingCode = newRoutingCode;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsRoutingCode() {
        RemoveComponent(GameComponentsLookup.ComponentsRoutingCode);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsRoutingCode;

    public static Entitas.IMatcher<GameEntity> ComponentsRoutingCode {
        get {
            if (_matcherComponentsRoutingCode == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsRoutingCode);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsRoutingCode = matcher;
            }

            return _matcherComponentsRoutingCode;
        }
    }
}
