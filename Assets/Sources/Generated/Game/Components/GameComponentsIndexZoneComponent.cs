//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.IndexZoneComponent componentsIndexZone { get { return (Components.IndexZoneComponent)GetComponent(GameComponentsLookup.ComponentsIndexZone); } }
    public bool hasComponentsIndexZone { get { return HasComponent(GameComponentsLookup.ComponentsIndexZone); } }

    public void AddComponentsIndexZone(int newZones, int newLast) {
        var index = GameComponentsLookup.ComponentsIndexZone;
        var component = (Components.IndexZoneComponent)CreateComponent(index, typeof(Components.IndexZoneComponent));
        component.Zones = newZones;
        component.Last = newLast;
        AddComponent(index, component);
    }

    public void ReplaceComponentsIndexZone(int newZones, int newLast) {
        var index = GameComponentsLookup.ComponentsIndexZone;
        var component = (Components.IndexZoneComponent)CreateComponent(index, typeof(Components.IndexZoneComponent));
        component.Zones = newZones;
        component.Last = newLast;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsIndexZone() {
        RemoveComponent(GameComponentsLookup.ComponentsIndexZone);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsIndexZone;

    public static Entitas.IMatcher<GameEntity> ComponentsIndexZone {
        get {
            if (_matcherComponentsIndexZone == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsIndexZone);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsIndexZone = matcher;
            }

            return _matcherComponentsIndexZone;
        }
    }
}
