//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.MoveComponent componentsMove { get { return (Components.MoveComponent)GetComponent(GameComponentsLookup.ComponentsMove); } }
    public bool hasComponentsMove { get { return HasComponent(GameComponentsLookup.ComponentsMove); } }

    public void AddComponentsMove(Data.Position newEndPosition, float newVelocity) {
        var index = GameComponentsLookup.ComponentsMove;
        var component = (Components.MoveComponent)CreateComponent(index, typeof(Components.MoveComponent));
        component.EndPosition = newEndPosition;
        component.Velocity = newVelocity;
        AddComponent(index, component);
    }

    public void ReplaceComponentsMove(Data.Position newEndPosition, float newVelocity) {
        var index = GameComponentsLookup.ComponentsMove;
        var component = (Components.MoveComponent)CreateComponent(index, typeof(Components.MoveComponent));
        component.EndPosition = newEndPosition;
        component.Velocity = newVelocity;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsMove() {
        RemoveComponent(GameComponentsLookup.ComponentsMove);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsMove;

    public static Entitas.IMatcher<GameEntity> ComponentsMove {
        get {
            if (_matcherComponentsMove == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsMove);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsMove = matcher;
            }

            return _matcherComponentsMove;
        }
    }
}
