//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.ConveyorRenderComponent componentsConveyorRender { get { return (Components.ConveyorRenderComponent)GetComponent(GameComponentsLookup.ComponentsConveyorRender); } }
    public bool hasComponentsConveyorRender { get { return HasComponent(GameComponentsLookup.ComponentsConveyorRender); } }

    public void AddComponentsConveyorRender(UnityEngine.GameObject newValue) {
        var index = GameComponentsLookup.ComponentsConveyorRender;
        var component = (Components.ConveyorRenderComponent)CreateComponent(index, typeof(Components.ConveyorRenderComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceComponentsConveyorRender(UnityEngine.GameObject newValue) {
        var index = GameComponentsLookup.ComponentsConveyorRender;
        var component = (Components.ConveyorRenderComponent)CreateComponent(index, typeof(Components.ConveyorRenderComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsConveyorRender() {
        RemoveComponent(GameComponentsLookup.ComponentsConveyorRender);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsConveyorRender;

    public static Entitas.IMatcher<GameEntity> ComponentsConveyorRender {
        get {
            if (_matcherComponentsConveyorRender == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsConveyorRender);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsConveyorRender = matcher;
            }

            return _matcherComponentsConveyorRender;
        }
    }
}
