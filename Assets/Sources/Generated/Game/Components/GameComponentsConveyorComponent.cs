//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.ConveyorComponent componentsConveyor { get { return (Components.ConveyorComponent)GetComponent(GameComponentsLookup.ComponentsConveyor); } }
    public bool hasComponentsConveyor { get { return HasComponent(GameComponentsLookup.ComponentsConveyor); } }

    public void AddComponentsConveyor(string newId) {
        var index = GameComponentsLookup.ComponentsConveyor;
        var component = (Components.ConveyorComponent)CreateComponent(index, typeof(Components.ConveyorComponent));
        component.Id = newId;
        AddComponent(index, component);
    }

    public void ReplaceComponentsConveyor(string newId) {
        var index = GameComponentsLookup.ComponentsConveyor;
        var component = (Components.ConveyorComponent)CreateComponent(index, typeof(Components.ConveyorComponent));
        component.Id = newId;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsConveyor() {
        RemoveComponent(GameComponentsLookup.ComponentsConveyor);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsConveyor;

    public static Entitas.IMatcher<GameEntity> ComponentsConveyor {
        get {
            if (_matcherComponentsConveyor == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsConveyor);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsConveyor = matcher;
            }

            return _matcherComponentsConveyor;
        }
    }
}
